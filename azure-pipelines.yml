# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
variables:
  CARGO_CACHE_FOLDER: $(Pipeline.Workspace)/.cargo
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.config/yarn

jobs:
- job: deps
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '8.x'
  - script: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y
      echo "##vso[task.setvariable variable=PATH;isOutput=true]$HOME/.cargo/bin:$PATH"
    name: install_rust
    displayName: Install rust
- job: build
  pool:
    vmImage: 'ubuntu-latest'
  dependsOn: deps
  variables:
    PATH: $[dependencies.deps.outputs['install_rust.PATH']]
  steps:
  - task: CacheBeta@0
    inputs:
      key: $(Agent.OS)
      path: /home/vsts/.cargo
    displayName: Cache Cargo and Yarn packages
  - script: |
      cd javascript/containerless
      yarn install
      yarn run build
      cd ../js-transform
      yarn install
      yarn run build
      cd ../../rust/compiler
      cargo build

- job: test_containerless
  pool:
    vmImage: 'ubuntu-latest'
  dependsOn: build
  variables:
    PATH: $[dependencies.deps.outputs['install_rust.PATH']]
  steps:
  - script: |
      cd javascript/containerless
      yarn run test
- job: test_compiler
  pool:
    vmImage: 'ubuntu-latest'
  dependsOn: build
  variables:
    PATH: $[dependencies.deps.outputs['install_rust.PATH']]
  steps:
  - script: |
      cd rust/compiler
      cargo test

